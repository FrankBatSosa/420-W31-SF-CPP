<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="316px" preserveAspectRatio="none" style="width:457px;height:316px;background:#FFFFFF;" version="1.1" viewBox="0 0 457 316" width="457px" zoomAndPan="magnify"><defs/><g><!--MD5=[1dca4111f7a479a7d42d9d8fa3af59a9]
class ListeEntiers--><g id="elem_ListeEntiers"><rect codeLine="2" fill="#F1F1F1" height="295.3242" id="ListeEntiers" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="436" x="7" y="7"/><ellipse cx="181.75" cy="23" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M184.2231,29.1431 Q183.6421,29.4419 183.0029,29.5913 Q182.3638,29.7407 181.6582,29.7407 Q179.1514,29.7407 177.8315,28.0889 Q176.5117,26.437 176.5117,23.3159 Q176.5117,20.1865 177.8315,18.5347 Q179.1514,16.8828 181.6582,16.8828 Q182.3638,16.8828 183.0112,17.0322 Q183.6587,17.1816 184.2231,17.4805 L184.2231,20.2031 Q183.5923,19.6221 182.9988,19.3523 Q182.4053,19.0825 181.7744,19.0825 Q180.4297,19.0825 179.7449,20.1492 Q179.0601,21.2158 179.0601,23.3159 Q179.0601,25.4077 179.7449,26.4744 Q180.4297,27.541 181.7744,27.541 Q182.4053,27.541 182.9988,27.2712 Q183.5923,27.0015 184.2231,26.4204 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="78" x="202.25" y="28.291">ListeEntiers</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="442" y1="39" y2="39"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="49.7441"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="98" x="27" y="56.5352">int *m_valeurs</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="66.2324"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="98" x="27" y="73.0234">int m_capacite</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="82.7207"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="122" x="27" y="89.5117">int m_nbElements</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="442" y1="96.4648" y2="96.4648"/><ellipse cx="18" cy="110.209" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="88" x="27" y="114">ListeEntiers()</text><ellipse cx="18" cy="126.6973" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="321" x="27" y="130.4883">ListeEntiers(const ListeEntiers &amp;p_listeACopier)</text><ellipse cx="18" cy="143.1855" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="304" x="27" y="146.9766">ListeEntiers(ListeEntiers &amp;&amp;p_listeADeplacer)</text><ellipse cx="18" cy="159.6738" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="97" x="27" y="163.4648">~ListeEntiers()</text><ellipse cx="18" cy="176.1621" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="244" x="27" y="179.9531">void ajouterFin(const int&amp; p_valeur)</text><ellipse cx="18" cy="192.6504" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="135" x="27" y="196.4414">void supprimerFin()</text><ellipse cx="18" cy="209.1387" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="212" x="27" y="212.9297">int obtenir(const int&amp; p_indice)</text><ellipse cx="18" cy="225.627" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="189" x="27" y="229.418">int nombreElements() const</text><ellipse cx="18" cy="242.1152" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="129" x="27" y="245.9063">int capacite() const</text><ellipse cx="18" cy="258.6035" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="410" x="27" y="262.3945">ListeEntiers &amp; operator=(const ListeEntiers &amp;p_listeACopier)</text><ellipse cx="18" cy="275.0918" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="393" x="27" y="278.8828">ListeEntiers &amp; operator=(ListeEntiers &amp;&amp;p_listeADeplacer)</text><ellipse cx="18" cy="291.5801" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="309" x="27" y="295.3711">void parcourir(void (*p_fonction)(const int&amp;))</text></g><!--MD5=[c58865df1149338ab0d4c43b4f16d91a]
@startuml

class ListeEntiers {
  - int *m_valeurs
  - int m_capacite
  - int m_nbElements
  + ListeEntiers()
  + ListeEntiers(const ListeEntiers &p_listeACopier)
  + ListeEntiers(ListeEntiers &&p_listeADeplacer)
  + ~ListeEntiers()
  + void ajouterFin(const int& p_valeur)
  + void supprimerFin()
  + int obtenir(const int& p_indice)
  + int nombreElements() const
  + int capacite() const
  + ListeEntiers & operator=(const ListeEntiers &p_listeACopier)
  + ListeEntiers & operator=(ListeEntiers &&p_listeADeplacer)
  + void parcourir(void (*p_fonction)(const int&))
}

@enduml

PlantUML version 1.2022.7(Mon Aug 22 13:01:30 EDT 2022)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: fr
Country: CA
--></g></svg>